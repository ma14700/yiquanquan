<template>
    <div class="orderpay">
        <loading v-if="isLoading"></loading>
        <div v-if="!isLoading">
            <div class="order-goods">
                <div class="order-goods-wraper" v-for="(item,index) in orderList.orderItems" :key="index" v-if="item.itemType == 1  && orderList.orderType == 1">
                    <div class="img-box">
                        <img :src="item.itemPic" alt="">
                    </div>
                    <div class="order-text">
                        <p class="text">{{item.itemGoodName}}</p>
                        <p class="price">¥{{item.itemPrice | two}}
                        </p>
                    </div>
                </div>
                <div class="order-goods-wraper" v-for="(item,index) in orderList.orderItems" :key="index" v-if="item.itemType == 2 && orderList.orderType == 2">
                    <div class="img-box">
                        <img :src="item.itemPic" alt="">
                    </div>
                    <div class="order-text">
                        <p class="text">{{item.itemGoodName}}</p>
                        <p class="price">¥{{item.itemPrice | two}}
                            <span class="text-right">{{proData(item.itemSkuJson)}}</span>
                            <span>×{{item.itemGoodNum}}</span>
                        </p>
                    </div>
                </div>
            </div>
            <div class="package-order-wraper" v-if="orderList.orderType == 1">
                <div class="stage">
                   <p class="stage-pay" v-text="(orderList.orderStatus == '定金未付' || orderList.orderStatus == '已取消')? '阶段1：未完成' : '阶段1：已完成'"></p>
                    <p class="stage-detail">商品定金
                        <span>¥{{orderList.orderPromiseMoney | two}}</span>
                    </p>
                </div>
                <div class="stage">
                    <p class="stage-pay" v-text="(orderList.orderStatus == '尾款已支付' || orderList.orderStatus == '订单完成')? '阶段2：已完成' : '阶段2：未完成'"></p>
                    <p class="stage-detail">商品总额
                        <span>¥{{orderList.orderTotalFee | two}}</span>
                    </p>
                    <p class="stage-detail">定金优惠
                        <span>－¥ 00.00</span>
                    </p>
                </div>
               <div class="stage staging" v-if="(orderList.orderStatus != '尾款已支付') && (orderList.orderStatus != '订单完成')">
                    <p class="stage-pay" v-text="orderList.orderStatus == '定金未付'? '待付定金：¥' +orderList.orderPromiseMoney:'待付尾款：¥' + (orderList.orderTotalFee - orderList.orderPromiseMoney).toFixed(2)">
                        <!-- 待付尾款： <i>{{orderList.orderTotalFee - orderList.orderPromiseMoney | two}}</i> -->
                    </p>
                </div>
                <div class="others">
                    <p class="pay-detail" @click="showDetail">套餐所含商品
                        <i class="iconfont " :class="[test?'icon-arrow_down':'icon-smallxiangyou']"></i>
                    </p>
                    <!--隐藏的商品详细  -->
                    <div class="goods-detail" :class="[test?'goods-detail-block':'goods-detail']" v-if="orderPackageDetailList">
                        <div class="order-goods" v-for="item in orderPackageDetailList" :key="item.id">
                            <div class="img-box">
                                <img :src="item.goodFirstPicUrl" alt="">
                            </div>
                            <div class="order-text">
                                <p class="text">{{item.goodName}}</p>
                                <p class="price">¥{{item.goodSalePrice}}
                                    <b class="num">×{{item.quantity}}</b>
                                </p>

                            </div>
                        </div>
                    </div>
                    <!--end  -->
                </div>
                <div class="others" v-if="orderList.orderItems.length > 1">
                    <p class="pay-detail" @click="showAddGoodDetail">加选商品
                        <i class="iconfont " :class="[addgoodshow?'icon-arrow_down':'icon-smallxiangyou']"></i>
                    </p>
                    <!--隐藏的加选商品  -->

                    <div class="" :class="[addgoodshow?'goods-detail-block':'goods-detail']">
                        <div class="order-goods" v-for="item in orderList.orderItems" :key="item.id" v-if="item.itemType == 2">
                            <div class="img-box">
                                <img :src="item.itemPic" alt="">
                            </div>
                            <div class="order-text">
                                <p class="text">{{item.itemGoodName}}</p>
                                <p class="price">¥{{item.itemPrice}}
                                    <b class="num">×{{item.itemGoodNum}}</b>
                                </p>

                            </div>
                        </div>
                    </div>
                    <!--end  -->
                </div>
            </div>
            <div v-else-if="orderList.orderType == 2" class="good-order-pay">
                <p>商品总额：¥{{orderList.orderTotalFee}}</p>
            </div>

            <ul class="order-detail">
                <li>订单编号：{{orderList.orderNo}}</li>
                <li>下单时间：{{orderList.createTime | date}}</li>
                <li>服务地址：{{orderList.orderReceiverAddress}}</li>
                <li>服务时间：{{orderList.orderPormiseDate | date}}</li>
            </ul>

            <div class="riderinfo" v-if="orderList.rider != null">
                <h3>为您分配的派对使者</h3>
                <div class="riderinfo-img">
                    <img :src="orderList.rider.headImage" alt="">
                </div>
                <div class="riderinfo-info">
                    <p>
                        <i class="iconfont icon-yonghu"></i>：{{orderList.rider.trueName}}</p>
                    <p>
                        <i class="iconfont icon-dianhua"></i>：
                        <a :href="'tel:' + orderList.rider.mobile">{{orderList.rider.mobile}}</a>
                    </p>
                </div>

            </div>
            <div class="height"></div>
            <div class="pay" @click="payMoney" v-if="this.isShowBottomButton">
                {{bottomPayText}}
            </div>
            <div class="pay" v-if="(orderList.orderStatus == '定金已付') || (orderList.orderStatus == '已经接单') || (orderList.orderStatus == '装饰开始')">
                {{bottomPayText2}}
            </div>
            <div class="pay" v-if="orderList.orderStatus == '尾款已支付'" @click="goComment()">
                立即评价
            </div>
            <!-- 评价 -->
            <div class="comment">
                <mt-popup v-model="popupVisible" popup-transition="popup-fade" position="bottom">
                    <div class="reviews">
                        <div class="pleased">服务满意度：
                            <span class="all">
                                <input type="radio" name="b" value="0" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                                <input type="radio" name="b" value="1" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                                <input type="radio" name="b" value="2" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                                <input type="radio" name="b" value="3" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                                <input type="radio" name="b" value="4" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                                <input type="radio" name="b" value="5" v-model="inputdata" />
                                <span class="iconfont icon-huabanfuben"></span>
                            </span>
                        </div>
                        <!--  -->
                        <ul class="comments">
                            <li v-for="(item,index) in commentLable" :key="index" @click="chooseCommentLable(item,index)" :class="item.isChecked?'red-text':''">{{item.labelLbl}}</li>
                        </ul>
                        <div class="write">

                            <textarea name="" id="" class="write-here" v-model="RateContent" placeholder="写下体会，帮助其他小伙伴吧~"></textarea>
                            <ul class="picture">

                                <li v-for="(item,index) in uploadFiles" :key="index">
                                    <img v-lazy="item" alt="">
                                    <span class="iconfont icon-cuohao little-button" @click="deleteImg(index)"></span>
                                </li>
                                <li v-if="uploadFiles.length < 3">
                                    <i class="iconfont icon-xiangji"></i>
                                    <p @click="uploadItem(file)">添加图片<br>{{uploadFiles.length}}/3</p>
                                    <vue-file-upload url="/api/handler/upload" class="iconfont icon-right" name="imgFile" :auto-upload="true" :compress="uploadCompress" :filters="uploadFilters" :events="uploadEvents"></vue-file-upload>
                                </li>

                            </ul>
                        </div>

                    </div>
                    <div class="confirm-reviews" @click="submitComment">提交评论</div>
                </mt-popup>

            </div>
            <!-- 评价end -->
        </div>
    </div>
</template>
<script>
import { MessageBox } from 'mint-ui';
import { Toast } from 'mint-ui';
import loading from '../../../components/loading/loading';
import VueFileUpload from 'vue-file-upload-with-compress';
import { ImageCompress } from '../../../config/mUtils';
export default {
    data() {
        var __this = this;
        return {
            test: false,
            addgoodshow: false,
            orderList: [],
            orderPackageDetailList: [],
            onlyOne: true,
            createTime: '',
            bottomPayText: '',
            isShowBottomButton: true,
            isLoading: true,
            payType: '',
            // 评价
            popupVisible: false,
            inputdata: '5',
            RateContent: null,
            commentLable: [],
            chooseLable: [],
            RateResult: '',
            RatePicture: '',
            OrderInfoId: '',
            file: [],
            files: [],
            uploadFiles: [],
            uploadEvents: {
                onCompleteUpload: function(file, res, status) {
                    if (res && res.success) {
                        __this.uploadFiles.push(res.url);
                        Toast({
                            message: res.success ? '上传成功' : res.message,
                            position: 'bottom',
                            duration: 1.5e3
                        });
                    }
                    // console.log(__this.uploadFiles);
                    __this.RatePicture = __this.uploadFiles.join(",");
                },
                onBeforeUpload: function() {
                    Toast({
                        message: '正在上传..',
                        position: 'bottom',
                        duration: 1.5e3
                    });
                }
            },
            uploadFilters: [
                {
                    name: "imageFilter",
                    fn(file) {
                        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';
                        if ('|jpg|png|jpeg|bmp|'.indexOf(type) == -1) {
                            //mui.toast('不支持的文件类型');
                            return false;
                        }
                        return true;
                    }
                }
            ],
            uploadCompress: {
                enable: true,
                compresor: function(file, callback) {
                    let instance = Toast({
                        message: '正在压缩..',
                        iconClass: 'compress'
                    });

                    ImageCompress(file, 0.8, 'height', function(nfile) {
                        callback(nfile);
                        instance.close();
                    });
                }
            },

        }
    },
    watch: {
        '$route'(to, from) {
            location.reload()
        }
    },
    components: {
        loading,
        VueFileUpload,
    },
    computed: {
        bottomPayText2: function() {
            let text = '';
            if (this.orderList.rider == null) {
                text = "等待接单";
            } else {
                text = this.orderList.orderStatus
            }
            return text
        }
    },
    created() {
        this.getOrderList();
        this.getCommentLable();
    },
    methods: {
        deleteImg(index) {
            this.uploadFiles.splice(index, 1);
            this.RatePicture = this.uploadFiles.join(",");
        },
        // 评论标签列表
        getCommentLable() {
            this.$http.get('/api/ratelabel/list').then(res => {
                this.commentLable = res.data.data
            })
        },
        chooseCommentLable(item) {

            this.$set(item, "isChecked", !!!item.isChecked);
            let _this = this;

            if (!!item.isChecked) {
                _this.chooseLable.push(item.labelLbl);
            } else {
                _this.chooseLable.splice(item, 1);
            }
            this.RateResult = this.chooseLable.join(",")
        },
        goComment() {
            this.popupVisible = true;
            this.OrderInfoId = this.orderList.id;
        },
        // 评论
        submitComment() {
            if (this.RateContent != null) {
                this.$http.post('/api/rate/add', {
                    "RateContent": this.RateContent,
                    "RateResult": this.RateResult,
                    "OrderInfoId": this.OrderInfoId,
                    "RateScore": this.inputdata,
                    "RatePicture": this.RatePicture,

                }).then(res => {
                    if (res.data.success) {
                        MessageBox({
                            title: '评价成功',
                            message: '',
                            confirmButtonText: '完成'
                        }).then(action => {
                            location.href = "/myorder?selected=4";
                            //this.$router.push({ path: '/myorder?selected=4' });
                        });
                    } else {
                        MessageBox({
                            title: '网络超时，请稍后重试',
                            message: '',
                            confirmButtonText: '好的'
                        }).then(action => {

                        });
                    }
                })
                this.popupVisible = false;
            } else {
                Toast({
                    message: '评价内容不能为空哦',
                    position: 'bottom',
                    duration: 1.5e3
                });
            }

        },
        uploadItem(file) {
            //单个文件上传
            file.upload();
        },
        proData(pro) {
            pro = pro.split(";");
            let data = [];
            for (let i = 0; i < pro.length; i++) {
                data.push(pro[i].split(":")[1]);
            }
            return data.join(";");
        },
        showDetail() {
            this.test = !this.test;
            let packageID = '';
            for (let i = 0; i < this.orderList.orderItems.length; i++) {
                if (this.orderList.orderItems[i].itemType == 1) {
                    packageID = parseInt(this.orderList.orderItems[i].itemGoodId);
                }
            }
            if (this.onlyOne) {
                this.$http.get('/api/partypkg/partypkgdetail?id=' + packageID).then(res => {
                    this.orderPackageDetailList = res.data.data
                })
            }
            this.onlyOne = false;
        },
        showAddGoodDetail() {
            this.addgoodshow = !this.addgoodshow;
        },
        getOrderList() {
            this.$http.get('/api/order/detail?id=' + this.$route.query.orderId).then(res => {
                this.orderList = res.data.data;
                console.log(this.orderList);
                if (res.data.data) {
                    this.isLoading = false;
                }
                if (this.orderList.orderStatus == '定金未付') {
                    this.bottomPayText = '支付定金'
                } else if (this.orderList.orderStatus == '装饰完成') {
                    this.bottomPayText = '支付尾款'
                } else if (this.orderList.orderStatus == '等待支付') {
                    this.bottomPayText = '确认支付';
                } else if (this.orderList.orderStatus == '已取消') {
                    this.bottomPayText = '已取消该订单支付';
                } else {
                    this.isShowBottomButton = false;
                }
            })

        },

        jsWechatPay(data) {
            let _this = this;
            WeixinJSBridge.invoke('getBrandWCPayRequest', data, function(res) {

                if (res.err_msg == 'get_brand_wcpay_request:cancel') {
                    MessageBox({
                        title: '支付失败',
                        message: '支付遇到问题，请尝试重新支付',
                        showCancelButton: true,
                        confirmButtonText: '重新支付'
                    }).then(action => {

                    });
                }
                else if (res.err_msg == 'get_brand_wcpay_request:ok') {
                    if (_this.orderList.orderStatus == '定金未付') {
                        MessageBox({
                            title: '定金支付成功',
                            message: '请等待派对使者接单',
                            confirmButtonText: '确定'
                        }).then(action => {

                            _this.$router.push('/myorder?selected=0');
                        });
                    } else if (_this.orderList.orderStatus == '等待支付') {
                        MessageBox({
                            title: '支付成功',
                            message: '感谢您使用壹圈圈派对服务，请对本次服务进行评价！',
                            confirmButtonText: '确定'
                        }).then(action => {

                            _this.$router.push('/myorder?selected=0');
                        });
                    } else {
                        MessageBox({
                            title: '支付成功',
                            message: '感谢您使用壹圈圈派对服务，请对本次服务进行评价！',
                            confirmButtonText: '确定'
                        }).then(action => {

                            _this.$router.push('/myorder?selected=0');
                        });
                    }

                }
                else if (res.err_msg == 'get_brand_wcpay_request:fail') {
                    alert("fail", 3)
                } else
                    alert(res.err_msg, 4);
            });
        },
        payMoney() {
            let _this = this;
            if (this.orderList.orderType == 1) {
                if (this.orderList.orderStatus == '定金未付') {
                    this.payType = 1;
                } else if (this.orderList.orderStatus == '定金已付' || this.orderList.orderStatus == '装饰完成') {
                    this.payType = 2
                } else {

                }
            } else if (this.orderList.orderType == 1 || this.orderList.orderStatus == '等待支付') {
                this.payType = 3
            }

            this.$http.post('/api/order/pay?id=' + this.$route.query.orderId + '&payType=' + this.payType).then(res => {
                if (res.data.success) {
                    let wxdataa = JSON.parse(res.data.message);
                    let package_list = wxdataa.package;
                    let sendData = {
                        appId: wxdataa.appId,
                        nonceStr: wxdataa.nonceStr,
                        package: package_list,
                        paySign: wxdataa.paySign,
                        signType: wxdataa.signType,
                        timeStamp: wxdataa.timeStamp
                    }
                    if (typeof WeixinJSBridge == "undefined") {
                        if (document.addEventListener) {
                            document.addEventListener('WeixinJSBridgeReady', function() { _this.jsWechatPay(sendData) }, false);
                        }
                        else if (document.attachEvent) {
                            document.attachEvent('WeixinJSBridgeReady', function() { _this.jsWechatPay(sendData) });
                            document.attachEvent('onWeixinJSBridgeReady', function() { _this.jsWechatPay(sendData) });
                        }
                    } else {
                        _this.jsWechatPay(sendData);
                    }

                } else {
                    MessageBox({
                        title: '支付失败',
                        message: '支付遇到问题，请尝试重新支付',
                        showCancelButton: true,
                        confirmButtonText: '重新支付'
                    }).then(action => {

                    });

                }
            })
        }

    },
    filters: {
        //保留两位小数点
        two: function(value) {
            if (!value) { return '' };
            return value.toFixed(2);
        },
        date(value) {
            var dateee = new Date(value).toJSON();
            var date = new Date(+new Date(dateee)).toISOString().replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '');
            return date
        },
    }
}
</script>
<style>
/*不显示center内容  */

.center {
    background: #fff;
}

.makecard,
.footGuide,
.mypic,
.myorder,
.mymsg,
footer {
    display: none;
}

.orderpay {
    background: #ece5f4;
}

.orderpay .order-goods {
    overflow: hidden;
    padding: .2rem .4rem;
    border-bottom: 1px solid #ece5f4;
    background: #fff;
}

.orderpay .no-more-good {
    text-align: center;
    font-size: .4rem;
    color: #492b67;
    line-height: 1rem;
    background: #fff;
}

.orderpay .order-goods-wraper {
    padding: .2rem 0;
    overflow: hidden;
}

.orderpay .order-goods .img-box {
    width: 2.666667rem;
    height: 2.666667rem;
    overflow: hidden;
    float: left;
    border-radius: .133333rem;
    border: 1px solid #ece5f4;
    margin-right: .266667rem;
}

.orderpay .order-goods .img-box img {
    width: 100%;
    height: 100%;
}

.orderpay .order-goods .order-text {
    width: 6.133333rem;
    float: left;

    font-size: .4rem;
    box-sizing: border-box;
    padding: .4rem 0;
}

.orderpay .order-text .text {
    color: #492b67;
    line-height: .533333rem;
}

.orderpay .order-text .price {
    color: #de3163;
    margin-top: .4rem;
    font-size: .48rem;
    line-height: .48rem;
}

.orderpay .order-text .price span {

    font-size: .4rem;
}

.orderpay .order-text .price span.text-right {
    color: #c5bcce;
    float: right;
}

.orderpay .order-text .num {
    float: right;
    color: #c5bcce
}



/*  */

.orderpay .stage {
    font-size: .4rem;
    background: #fff;

    padding: .4rem;
    border-bottom: 1px solid #ece5f4;
}

.orderpay .stage.staging .stage-pay {
    margin-bottom: 0;
}

.orderpay .stage.staging .stage-pay i {
    float: right;
    color: #de3163;
}

.orderpay .stage .stage-pay {
    color: #492b67;
    margin-bottom: .266667rem;
}

.orderpay .stage .stage-detail {
    color: #b0a4bc;
    line-height: .533333rem;
}

.orderpay .stage .stage-detail span {
    float: right;
}

.orderpay .others {
    margin-top: .266667rem;
}

.orderpay .others .pay-detail {
    background: #fff;
    font-size: .4rem;
    color: #492b67;
    line-height: 1.266667rem;
    padding: 0 .4rem;
    border-bottom: 1px solid #ece5f4;
}

.orderpay .others p i {
    float: right;
    font-size: .58rem;
}

.orderpay .others .others-money i {
    color: #de3163;
}

.orderpay .others .pay-detail i {
    color: #b0a4bc;
}

.orderpay .good-order-pay {
    height: 1rem;
    background: #fff;
    line-height: 1rem;
    padding: 0 .4rem;
    text-align: right;
    font-size: .4rem;
    color: #de3163;
}

.orderpay .order-detail {
    padding: .4rem;

    background: #fff;
    margin: .266667rem 0;
}

.orderpay .order-detail li {
    font-size: .36rem;
    color: #b0a4bc;
    line-height: .6rem;
}

.orderpay .pay {
    height: 1.306667rem;
    background: linear-gradient(to right, #926eb7, #de3193);
    text-align: center;
    line-height: 1.306667rem;
    color: #fff;
    font-size: .48rem;
    position: fixed;
    bottom: 0;
    width: 100%;
}

.orderpay .goods-detail {
    display: none;
}

.orderpay .goods-detail-block {
    display: block;
}

.height {
    height: 1.306667rem;
    background: #fff;
}




/* rider */

.riderinfo {
    width: 100%;
    background: #fff;
    padding: 0 .4rem 0.24rem;
    box-sizing: border-box;
    overflow: hidden;
}

.riderinfo>h3 {
    width: 100%;
    line-height: 1rem;
    height: 1rem;
    text-align: center;
    font-size: 0.36rem;
    color: #492b67;
}

.riderinfo .riderinfo-img {
    width: 1.6rem;
    height: 1.6rem;
    overflow: hidden;
    float: left;
    border-radius: 50%;
    border: 1px solid #ece5f4;
}

.riderinfo .riderinfo-img img {
    width: 100%;
    height: 100%;
}

.riderinfo .riderinfo-info {
    float: right;
    color: #b0a4bc;
    font-size: .4rem;
    width: 6.2rem;
}

.riderinfo .riderinfo-info p {
    font-size: .36rem;
    line-height: .8rem;
}

.riderinfo .riderinfo-info p>a {
    color: #b0a4bc;
}


/* messagebox */

.mint-msgbox-title {
    color: #b0a4bc;
    font-size: .533333rem;
    font-weight: normal;
}

.mint-msgbox-message {
    color: #b0a4bc;
}

.mint-msgbox-btn.mint-msgbox-confirm {
    color: #492b67;
    font-size: .48rem;
}

.mint-msgbox-btn.mint-msgbox-cancel {
    color: #b0a4bc;
    font-size: .48rem;
}

.comment .reviews {
    padding: .4rem;
    width: 10rem;
    box-sizing: border-box;
}

.comment .reviews .pleased {
    font-size: .4rem;
    color: #492b67;
}

.comment .all>input {
    opacity: 0;
    position: absolute;
    width: .426667rem;
    height: .426667rem;
    margin: 0;
}

.comment .all>input:nth-of-type(1),
.comment .all>span:nth-of-type(1) {
    display: none;
}

.comment .all>span {
    font-size: .533333rem;
    color: #de3163;
    -webkit-transition: color .2s;
    transition: color .2s;
}

.comment .all>input:checked~span {
    color: #b0a4bc;
}

.comment .all>input:checked+span {
    color: #de3163;
}


/*  */

.comment .comments {
    margin-top: .4rem;
    overflow: hidden;
}

.comment .comments li {
    line-height: .6rem;
    padding: 0 .4rem;
    border-radius: .133333rem;
    height: .6rem;
    border: 1px solid #b0a4bc;
    float: left;
    margin-right: .266667rem;
    margin-bottom: .266667rem;
    color: #b0a4bc;
    font-size: .4rem
}

.comment .comments li.red-text {
    color: #de3163;
    border-color: #de3163;
}


/*xie  */

.comment .write {
    box-sizing: border-box;
    color: #b0a4bc;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.comment .write-here {
    width: 100%;
    height: 3rem;
    padding: .4rem 0;
    box-sizing: border-box;
    color: #b0a4bc;
    font-size: .36rem;
    border: 0;
    line-height: .48rem;
}

.comment .write .picture {}

.comment .write .picture li {
    margin-right: .266667rem;
    float: left;
    width: 1.8rem;
    height: 1.8rem;
    border: 1px dashed #b0a4bc;
    position: relative;
}

.comment .picture li img {
    width: 100%;
    height: 100%;
}

.comment .picture li i {
    margin-top: .25rem;
    display: block;
    font-size: .6rem;
}

.comment .picture .little-button {
    position: absolute;
    right: -.2rem;
    top: -.1rem;
    color: #b0a4bc;
    font-size: .4rem;
}



/*  */

.comment .confirm-reviews {
    height: 1.306667rem;
    line-height: 1.306667rem;
    text-align: center;
    font-size: .48rem;
    color: #fff;
    background: linear-gradient(to right, #926eb7, #de3193);
}

::-webkit-input-placeholder {
    /* WebKit, Blink, Edge */
    color: #b0a4bc;
    font-size: .4rem
}

:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: #b0a4bc;
    font-size: .4rem
}

::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: #b0a4bc;
    font-size: .4rem
}

:-ms-input-placeholder {
    /* Internet Explorer 10-11 */
    color: #b0a4bc;
    font-size: .4rem
}
</style>
