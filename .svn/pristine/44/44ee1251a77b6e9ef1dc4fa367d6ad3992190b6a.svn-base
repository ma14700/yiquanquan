import {
    ADD_CART,
    REDUCE_CART,
    INIT_BUYCART,
    CLEAR_CART,
    SETTLE_ACCOUNTS,
    GIT_SETTLE_ACCOUNTS,
    CLEAR_SETTLE_ACCOUNTS,
    SETTLE_PACKAGE_ACCOUNTS,
    GIT_SETTLE_PACKAGE_ACCOUNTS,
    CLEAR_PACKAGE,
    BUY_CART,


} from './mutation-types'
import { setStore, getStore, removeStore } from '../config/mUtils'
export default {
    //加入购物车
    [ADD_CART](state, {
        skuId, //商品id
        goodName, //商品名字
    }) {
        let cart = state.cartList;
        let item = cart[skuId] = (cart[skuId] || {});

        if (item[skuId]) {
            item[skuId]['num']++;

        } else {
            item[skuId] = {
                'num': 1,
                "id": skuId,
                "name": goodName,
            }
        }


        state.cartList = {...cart };
        //存入localStorage
        setStore('buyCart', state.cartList);
        console.log(state.cartList);

    },
    //移出购物车

    //网页初始化时从本地缓存获取购物车列表

    //结算商品（详情页）
    [SETTLE_ACCOUNTS](state, {
        SkuInfoId,
        CartNum,
        CartGoodId,
        goodName,
        goodTotalPrice,
        goodImgUrl,
        OrderType
    }) {

        // let item = Accounts[SkuInfoId] = (Accounts[SkuInfoId] || {});
        // item[SkuInfoId] = {
        //     "SkuInfoId": SkuInfoId,
        //     "CartNum": CartNum,
        //     "CartGoodId": CartGoodId,
        //     "goodName": goodName,
        //     "goodTotalPrice": goodTotalPrice,
        //     "goodImgUrl": goodImgUrl,
        //     "OrderType": 2
        // }
        let Accountsjson = {};
        Accountsjson.SkuInfoId = SkuInfoId;
        Accountsjson.CartNum = CartNum;
        Accountsjson.CartGoodId = CartGoodId;
        Accountsjson.goodName = goodName;
        Accountsjson.goodTotalPrice = goodTotalPrice;
        Accountsjson.goodImgUrl = goodImgUrl;
        Accountsjson.OrderType = 2;
        state.settleAccounts.push(Accountsjson)
        setStore('settleAccounts', state.settleAccounts);
        console.log(state.settleAccounts);

    },
    //
    [GIT_SETTLE_ACCOUNTS](state) {
        let test = getStore('settleAccounts')
        if (test) {
            state.settleAccounts = JSON.parse(test);
        }

    },
    //清除商品结算
    [CLEAR_SETTLE_ACCOUNTS](state, index) {
        state.settleAccounts.splice(index, 1);
        // state.settleAccounts = {...state.settleAccounts };
        setStore('settleAccounts', state.settleAccounts);
        console.log(state.settleAccounts);
        console.log('qingchu');
    },
    //结算套餐
    [SETTLE_PACKAGE_ACCOUNTS](state, {
        packageId,
        discountPrice,
        downPayment,
        imgUrl,
        name,
        summary,
        OrderType
    }) {
        let packageAccounts = state.settlePackageAccounts;
        let item = packageAccounts[packageId] = (packageAccounts[packageId] || {});
        item[packageId] = {
                'packageId': packageId,
                "discountPrice": discountPrice,
                "downPayment": downPayment,
                "imgUrl": imgUrl,
                "name": name,
                "summary": summary,
                "OrderType": 1
            }
            // state.settlePackageAccounts.push({
            //     'packageId': packageId,
            //     "discountPrice": discountPrice,
            //     "downPayment": downPayment,
            //     "imgUrl": imgUrl,
            //     "name": name,
            //     "summary": summary,
            //     "OrderType": 1
            // })
        state.settlePackageAccounts = {...packageAccounts };
        setStore('settlePackageAccounts', state.settlePackageAccounts);
        console.log(state.settlePackageAccounts);
    },
    //
    [GIT_SETTLE_PACKAGE_ACCOUNTS](state) {
        let aaa = getStore('settlePackageAccounts');
        if (aaa) {
            state.settlePackageAccounts = JSON.parse(aaa);
        }

    },
    //多个商品下单
    // [SETTLE_MANY_ACCOUNTS](state,{

    // })





}